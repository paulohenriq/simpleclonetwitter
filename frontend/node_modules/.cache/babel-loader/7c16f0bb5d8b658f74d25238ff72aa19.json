{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/src/pages/Timeline.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport socket from 'socket.io-client';\nimport twitterLogo from \"../twitter.svg\";\nimport './Timeline.css';\nimport Tweet from '../components/Tweet';\n\nvar Timeline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timeline, _Component);\n\n  function Timeline() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timeline)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tweets: [],\n      newTweet: '' //Método executado quando a página é exibida\n\n    };\n\n    _this.subscribeToEvents = function () {\n      var io = socket('http://localhost:3000');\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        newTweet: e.target.value\n      });\n    };\n\n    _this.handleNewTweet =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var content, author;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(e.keyCode !== 13)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                content = _this.state.newTweet;\n                author = localStorage.getItem('@GoTwitter:username');\n                _context.next = 6;\n                return api.post('/tweets', {\n                  content: content,\n                  author: author\n                });\n\n              case 6:\n                _this.setState({\n                  newTweet: ''\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return api.get('/tweets');\n\n              case 2:\n                response = _context2.sent;\n                this.setState({\n                  tweets: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"timeline-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        height: 24,\n        src: twitterLogo,\n        alt: \"Logo Twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        value: this.state.newTweet,\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleNewTweet,\n        placeholder: \"Insira seu coment\\xE1rio...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"tweet-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.tweets.map(function (tweet) {\n        return React.createElement(Tweet, {\n          key: tweet._id,\n          tweet: tweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Timeline;\n}(Component);\n\nexport { Timeline as default };","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/_goweekjs/frontend/src/pages/Timeline.js"],"names":["React","Component","api","socket","Tweet","Timeline","state","tweets","newTweet","subscribeToEvents","io","handleInputChange","e","setState","target","value","handleNewTweet","keyCode","content","author","localStorage","getItem","post","get","response","data","twitterLogo","map","tweet","_id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,OAAO,gBAAP;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;IAEqBC,Q;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,QAAQ,EAAE,EAFN,CAKR;;AALQ,K;;UAYRC,iB,GAAoB,YAAM;AACtB,UAAMC,EAAE,GAAGP,MAAM,CAAC,uBAAD,CAAjB;AACH,K;;UAEDQ,iB,GAAoB,UAAAC,CAAC,EAAI;AACrB,YAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd;AACH,K;;UAEDC,c;;;;;+BAAiB,iBAAMJ,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACVA,CAAC,CAACK,OAAF,KAAc,EADJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGPC,gBAAAA,OAHO,GAGG,MAAKZ,KAAL,CAAWE,QAHd;AAIPW,gBAAAA,MAJO,GAIEC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAJF;AAAA;AAAA,uBAMPnB,GAAG,CAACoB,IAAJ,CAAS,SAAT,EAAoB;AAAEJ,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,MAAM,EAANA;AAAX,iBAApB,CANO;;AAAA;AAQb,sBAAKN,QAAL,CAAc;AAAEL,kBAAAA,QAAQ,EAAE;AAAZ,iBAAd;;AARa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;;;;;;;;;;uBAbUN,GAAG,CAACqB,GAAJ,CAAQ,SAAR,C;;;AAAjBC,gBAAAA,Q;AAEN,qBAAKX,QAAL,CAAc;AAAEN,kBAAAA,MAAM,EAAEiB,QAAQ,CAACC;AAAnB,iBAAd;;;;;;;;;;;;;;;;6BAsBG;AACP,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,MAAM,EAAE,EAAb;AAAiB,QAAA,GAAG,EAAEC,WAAtB;AAAmC,QAAA,GAAG,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWE,QAA5B;AAAsC,QAAA,QAAQ,EAAE,KAAKG,iBAArD;AAAwE,QAAA,SAAS,EAAE,KAAKK,cAAxF;AAAwG,QAAA,WAAW,EAAC,6BAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,EAOI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKV,KAAL,CAAWC,MAAX,CAAkBoB,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACzB,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,GAAlB;AAAuB,UAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,OAA3B,CADF,CAPJ,CADJ;AAeD;;;;EAhDmC3B,S;;SAAjBI,Q","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport socket from 'socket.io-client'\n\nimport twitterLogo from '../twitter.svg'\nimport './Timeline.css'\n\nimport Tweet from '../components/Tweet'\n\nexport default class Timeline extends Component {\n    state = {\n        tweets: [],\n        newTweet: ''\n    }\n\n    //Método executado quando a página é exibida\n    async componentDidMount(){\n        const response = await api.get('/tweets')\n\n        this.setState({ tweets: response.data })\n    }\n\n    subscribeToEvents = () => {\n        const io = socket('http://localhost:3000')\n    }\n\n    handleInputChange = e => {\n        this.setState({ newTweet: e.target.value })\n    }\n\n    handleNewTweet = async e => {\n        if(e.keyCode !== 13) return\n\n        const content = this.state.newTweet\n        const author = localStorage.getItem('@GoTwitter:username')\n\n        await api.post('/tweets', { content, author })\n        \n        this.setState({ newTweet: '' })\n    }\n\n  render() {\n    return (\n        <div className=\"timeline-wrapper\">\n            <img height={24} src={twitterLogo} alt=\"Logo Twitter\" />\n\n            <form>\n                <textarea value={this.state.newTweet} onChange={this.handleInputChange} onKeyDown={this.handleNewTweet} placeholder=\"Insira seu comentário...\"></textarea>\n            </form>\n\n            <ul className=\"tweet-list\">\n            { this.state.tweets.map(tweet => (\n                <Tweet key={tweet._id} tweet={tweet} />\n            )) }\n            </ul>\n        </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}